1: 创建Dao Service Controller并且设置依赖
 
2: AppRun: 此类时项目的入口,包扫描和开启注解都应该添加到此类
 
 // 此类代替就是xml配置文件
 @EnableAutoConfiguration  // 开启注解扫描(此注解会放在项目的启动类)
 @ComponentScan(basePackages={"cn.yd.shop"})// 配置需要扫描的包路径
 public class AppRun {
 
 	public static void main(String[] args) throws Exception {
 		SpringApplication.run(AppRun.class, args);
 	}
 }
 
 3: 创建JdbcTemplate,并且实现访问数据库操作(需要添加依赖)
 
 <dependency>
 	<groupId>org.springframework.boot</groupId>
 	<artifactId>spring-boot-starter-jdbc</artifactId>
 </dependency>
 
 4: 上面的配置缺少数据库访问驱动,和连接数据库的关键信息(数据库连接信息.默认存储application.properties配置文件中)
 
 org.springframework.boot.autoconfigure.jdbc.DataSourceProperties (用来读取数据库配置信息的工具类)
 
 5: 根据工具类的前缀在application.properties中配置连接数据库的信息
 
 spring.datasource.url=jdbc:mysql://localhost:3306/shop
 spring.datasource.username=root
 spring.datasource.password=root
 spring.datasource.driverClassName=com.mysql.jdbc.Driver
 
 经过上面的配置,应该能够正常操作数据库,接下来就可以修改缺省配置信息
 
 6: 修改dispatcherServlet的相关配置
 
 org.springframework.boot.autoconfigure.web.ServerProperties
 
 server.port=8081
 server.servletPath=*.mvc
 
 7: 自定义并且加载自己的配置文件(properties),定义完成后必须在入口(AppRUn添加注解 @PropertySource来加载配置文件)